<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DDSPanel</name>
    </assembly>
    <members>
        <member name="T:System.Drawing.DdsFile">
            <summary>
            Represents an image encoded using one of the supported DDS mechanisms.
            </summary>
            <remarks>
            A &quot;DirectX Draw Surface&quot; stores compressed pixel data that is used when
            rendering scenes.  The pixel data may be used for purposes other than purely display,
            such as being used for masked operations on another DDS image.
            <para>Note that this assembly depends on two unmanaged libraries:
            <br/>squishinterface_Win32.dll - code for 32bit Windows systems.
            <br/>squishinterface_x64.dll - code for 64bit Windows systems.
            </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.DdsFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a single colour, specified by the byte parameters,
            with the size given by the int parameters.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="r">Amount of red per pixel.</param>
            <param name="g">Amount of green per pixel.</param>
            <param name="b">Amount of blue per pixel.</param>
            <param name="a">Amount of alpha per pixel.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a single colour, specified by the <see cref="T:System.Drawing.Color"/> parameter,
            with the size given by the int parameters.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="color"><see cref="T:System.Drawing.Color"/> of image.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.UInt32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a single colour, specified by the uint parameter
            (low byte is "blue", then "green", then "red" then high byte is "alpha"),
            with the size given by the int parameters.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="argb">Colour of image (low byte is "blue", then "green", then "red" then high byte is "alpha").</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.DdsFile,System.Boolean)">
            <summary>
            Creates an image from a given <see cref="T:DdsFile"/>.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="image"><see cref="T:DdsFile"/> to clone.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.DdsFile,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image from a given <see cref="T:DdsFile"/>, resized as requested.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="image"><see cref="T:DdsFile"/> to clone.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.Image,System.Boolean)">
            <summary>
            Creates an image from a given <see cref="T:Image"/>.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="image"><see cref="T:Image"/> from which to extract image pixels.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Creates an image from a given <see cref="T:Bitmap"/>.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="image"><see cref="T:Bitmap"/> from which to extract image pixels.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.CreateImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image from a given <see cref="T:Bitmap"/>, resized as requested.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="image"><see cref="T:Bitmap"/> from which to extract image pixels.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads the data from an image encoded using one of the supported DDS mechanisms.
            If <paramref name="supportHSV"/> is true, also creates an HSVa-encoded version of the image.
            </summary>
            <param name="input">A <see cref="T:System.IO.Stream"/> containing the DDS-encoded image.</param>
            <param name="supportHSV">When true, create an HSVa-encoded version of the image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.Save(System.IO.Stream)">
             <summary>
             Saves the current image using one of the supported DDS mechanisms.
             </summary>
             <param name="output">A <see cref="T:System.IO.Stream"/> to receive the DDS-encoded image.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.Resize(System.Drawing.Size)">
            <summary>
            Get a new DdsFile of the given size based on the current image.
            </summary>
            <param name="size">The new size.</param>
            <returns>A new DdsFile of the given size based on the current image.</returns>
        </member>
        <member name="M:System.Drawing.DdsFile.SetAlphaFromGreyscale(System.Drawing.DdsFile)">
            <summary>
            Converts the R, G and B channels of the supplied <paramref name="image"/> to greyscale
            and loads this into the Alpha channel of the current image.
            The image format will be changed to one supporting an 8-bit Alpha channel, if required.
            </summary>
            <param name="image"><see cref="T:System.Drawing.DdsFile"/> to extract greyscale data from for alpha channel.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.SetAlphaFromGreyscale(System.Drawing.Image)">
            <summary>
            Converts the R, G and B channels of the supplied <paramref name="image"/> to greyscale
            and loads this into the Alpha channel of the current image.
            </summary>
            <param name="image"><see cref="T:Image"/> to extract greyscale data from for alpha channel.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.SetAlphaFromGreyscale(System.Drawing.Bitmap)">
            <summary>
            Converts the R, G and B channels of the supplied <paramref name="image"/> to greyscale
            and loads this into the Alpha channel of the current image.
            The image format will be changed to one supporting an Alpha channel, if required.
            </summary>
            <param name="image"><see cref="T:System.Drawing.Bitmap"/> to extract greyscale data from for alpha channel.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.DeleteAlphaChannel">
            <summary>
            Set the image format to one without an alpha channel, clearing the alpha data.
            </summary>
        </member>
        <member name="M:System.Drawing.DdsFile.GetGreyscaleFromAlpha">
            <summary>
            Get a greyscale image representing the alpha channel of the current image.
            </summary>
            <returns>A greyscale image representing the alpha channel of the current image.</returns>
        </member>
        <member name="M:System.Drawing.DdsFile.GetImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Extract a <see cref="T:Image"/> representing the current image, subject to the filtering requested.
            </summary>
            <param name="red">When true, the red channel of the DDS contributes to the red pixels of the returned image.</param>
            <param name="green">When true, the green channel of the DDS contributes to the green pixels of the returned image.</param>
            <param name="blue">When true, the blue channel of the DDS contributes to the blue pixels of the returned image.</param>
            <param name="alpha">When true, the alpha channel of the DDS contributes to the pixel transparency in the returned image.</param>
            <param name="invert">When true, the alpha channel of the DDS is inverted.</param>
            <returns>A <see cref="T:System.Drawing.Image"/> representation of the DDS encoded image in the loaded <see cref="T:System.IO.Stream"/>.</returns>
            <seealso cref="M:System.Drawing.DdsFile.Load(System.IO.Stream,System.Boolean)"/>
        </member>
        <member name="M:System.Drawing.DdsFile.SetPixels(System.Func{System.UInt32,System.UInt32})">
            <summary>
            Apply a transformation function to the current image.
            </summary>
            <param name="transform">
            A transformation function taking a current pixel value and returning a new value.
            </param>
        </member>
        <member name="M:System.Drawing.DdsFile.SetPixels(System.Func{System.Int32,System.Int32,System.UInt32,System.UInt32})">
            <summary>
            Apply a transformation function to the current image.
            </summary>
            <param name="transform">A transformation function taking
            <c>x</c>, <c>y</c> and <c>pixel</c> parameters and
            returning a new <c>pixel</c> value.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.DoAction(System.Action{System.Int32,System.Int32,System.UInt32})">
            <summary>
            Perform an action on each pixel in the current image.
            </summary>
            <param name="action">An action taking <c>x</c>, <c>y</c> and <c>pixel</c> parameters.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedSetColour(System.Drawing.DdsFile,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Set the colour of the image based on the channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Colour">(Nullable) ARGB colour to the image when the first channel of the mask is active.</param>
            <param name="ch2Colour">(Nullable) ARGB colour to the image when the second channel of the mask is active.</param>
            <param name="ch3Colour">(Nullable) ARGB colour to the image when the third channel of the mask is active.</param>
            <param name="ch4Colour">(Nullable) ARGB colour to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedApplyImage(System.Drawing.DdsFile,System.Drawing.DdsFile,System.Drawing.DdsFile,System.Drawing.DdsFile,System.Drawing.DdsFile)">
            <summary>
            Use the <paramref name="mask"/> to apply the DDS image supplied.
            </summary>
            <param name="mask">Determines to which areas each DDS image is applied.</param>
            <param name="ch1DdsFile">DDS image applied to <paramref name="mask"/> channel 1 area.</param>
            <param name="ch2DdsFile">DDS image applied to <paramref name="mask"/> channel 2 area.</param>
            <param name="ch3DdsFile">DDS image applied to <paramref name="mask"/> channel 3 area.</param>
            <param name="ch4DdsFile">DDS image applied to <paramref name="mask"/> channel 4 area.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedApplyImage(System.Drawing.DdsFile,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Use the <paramref name="mask"/> to apply the supplied images.
            </summary>
            <param name="mask">Determines to which areas each image is applied.</param>
            <param name="ch1Image">Image applied to <paramref name="mask"/> channel 1 area.</param>
            <param name="ch2Image">Image applied to <paramref name="mask"/> channel 2 area.</param>
            <param name="ch3Image">Image applied to <paramref name="mask"/> channel 3 area.</param>
            <param name="ch4Image">Image applied to <paramref name="mask"/> channel 4 area.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedApplyImage(System.Drawing.DdsFile,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Use the <paramref name="mask"/> to apply the supplied bitmaps.
            </summary>
            <param name="mask">Determines to which areas each image is applied.</param>
            <param name="ch1Bitmap">Bitmap applied to <paramref name="mask"/> channel 1 area.</param>
            <param name="ch2Bitmap">Bitmap applied to <paramref name="mask"/> channel 2 area.</param>
            <param name="ch3Bitmap">Bitmap applied to <paramref name="mask"/> channel 3 area.</param>
            <param name="ch4Bitmap">Bitmap applied to <paramref name="mask"/> channel 4 area.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.ClearMask">
            <summary>
            Clears a previously-applied HSVShift mask.
            </summary>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedHSVShift(System.Drawing.DdsFile,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift)">
            <summary>
            Apply <see cref="P:System.Drawing.DdsFile.HSVShift"/> values to this DDS image based on the
            channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">A DDS image file, each colourway acting as a mask channel.</param>
            <param name="ch1Shift">A shift to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Shift">A shift to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Shift">A shift to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Shift">A shift to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Drawing.DdsFile.MaskedHSVShiftNoBlend(System.Drawing.DdsFile,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift)">
            <summary>
            Apply <see cref="P:System.Drawing.DdsFile.HSVShift"/> values to this DDS image based on the
            channels in the <paramref name="mask"/>.
            Each channel of the mask acts independently, in order "R", "G", "B", "A".
            </summary>
            <param name="mask">A DDS image file, each colourway acting as a mask channel.</param>
            <param name="ch1Shift">A shift to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Shift">A shift to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Shift">A shift to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Shift">A shift to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="P:System.Drawing.DdsFile.Size">
            <summary>
            The image size.
            </summary>
        </member>
        <member name="P:System.Drawing.DdsFile.UseDXT">
            <summary>
            If true, use DXT-type image compression for storage.
            The exact format will depend on the <see cref="P:System.Drawing.DdsFile.AlphaDepth"/>.
            By default, DXT5 will be used.
            Setting to false (from true) will default to A8B8G8R8 format.
            </summary>
        </member>
        <member name="P:System.Drawing.DdsFile.UseLuminance">
            <summary>
            If true, treat the image as a luminance (plus alpha) map for storage.
            Currently only A8L8, 16bit coding is supported.
            Setting to false (from true) will default to A8B8G8R8 (non-DXT) format.
            </summary>
        </member>
        <member name="P:System.Drawing.DdsFile.AlphaDepth">
            <summary>
            When UseDXT is true, the DXT compression mode.
            Otherwise the number of bits per alpha pixel.
            </summary>
            <remarks>
            Value is used when saving a DDS.
            Invalid values may cause exceptions at that point.
            </remarks>
        </member>
        <member name="P:System.Drawing.DdsFile.Image">
            <summary>
            The current image.
            </summary>
        </member>
        <member name="P:System.Drawing.DdsFile.HSVShift">
            <summary>
            The HSVShift applied to the current image, when supported.
            </summary>
            <seealso cref="P:System.Drawing.DdsFile.SupportsHSV"/>
        </member>
        <member name="P:System.Drawing.DdsFile.SupportsHSV">
            <summary>
            True if the image is prepared to process HSV requests.
            </summary>
        </member>
        <member name="T:System.Drawing.DdsFile.Channel">
            <summary>
            Delegate to determine whether a channel of a given UInt32 ARGB format value is active.
            </summary>
            <param name="argb">The UInt32 ARGB format value.</param>
            <returns>True if the channel is active, otherwise false.</returns>
        </member>
        <member name="T:System.Drawing.DdsFile.ARGBAt">
            <summary>
            Return the UInt32 ARGB format pixel value for a given X/Y coordinate.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <returns>A UInt32 ARGB format pixel value.</returns>
        </member>
        <member name="T:System.Drawing.Extensions">
            <summary>
            Extensions for working with bitmap images.
            </summary>
        </member>
        <member name="M:System.Drawing.Extensions.ToBitmap(System.UInt32[],System.Drawing.Size)">
            <summary>
            Convert an array of UInt32 ARGB elements into a <see cref="T:Bitmap"/>.
            </summary>
            <param name="argbData">The array of UInt32 ARGB elements to decode.</param>
            <param name="size">The size of the encoded image.</param>
            <returns>The decoded image.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.ToBitmap(System.UInt32[],System.Int32,System.Int32)">
            <summary>
            Convert an array of UInt32 ARGB elements into a <see cref="T:Bitmap"/>.
            </summary>
            <param name="argbData">The array of UInt32 ARGB elements to decode.</param>
            <param name="width">The width of the encoded image.</param>
            <param name="height">The height of the encoded image.</param>
            <returns>The decoded bitmap image.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.ToARGBData(System.Drawing.Image)">
            <summary>
            Converts a <see cref="T:Image"/> into an array of UInt32 ARGB elements.
            </summary>
            <param name="image">The image to encode.</param>
            <returns>An array of UInt32 ARGB elements.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.ToARGBData(System.Drawing.Bitmap)">
            <summary>
            Converts a <see cref="T:Bitmap"/> into an array of UInt32 ARGB elements.
            </summary>
            <param name="bitmap">The bitmap image to encode.</param>
            <returns>An array of UInt32 ARGB elements.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.ToPixelData(System.Drawing.Bitmap,System.Func{System.Drawing.Color,System.UInt32})">
            <summary>
            Converts a <see cref="T:Bitmap"/> into a pixel data array,
            using the provided encoder.
            </summary>
            <param name="bitmap">The bitmap image to encode.</param>
            <param name="encoder">The method to invoke to encode bitmap <see cref="T:Color"/> pixels.</param>
            <returns>An array of uint elements containing the encoded pixel data.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.A(System.UInt32)">
            <summary>
            Extract the alpha channel from an ARGB format UInt32 value.
            </summary>
            <param name="argb">An ARGB format UInt32 value.</param>
            <returns>The alpha channel extracted.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.R(System.UInt32)">
            <summary>
            Extract the red channel from an ARGB format UInt32 value.
            </summary>
            <param name="argb">An ARGB format UInt32 value.</param>
            <returns>The red channel extracted.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.G(System.UInt32)">
            <summary>
            Extract the green channel from an ARGB format UInt32 value.
            </summary>
            <param name="argb">An ARGB format UInt32 value.</param>
            <returns>The green channel extracted.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.B(System.UInt32)">
            <summary>
            Extract the blue channel from an ARGB format UInt32 value.
            </summary>
            <param name="argb">An ARGB format UInt32 value.</param>
            <returns>The blue channel extracted.</returns>
        </member>
        <member name="M:System.Drawing.Extensions.Bits(System.UInt32)">
            <summary>
            Count the number of set bits in <paramref name="value"/>.
            </summary>
            <param name="value">A uint value to have bits counted.</param>
            <returns>The number of set bits in <paramref name="value"/>.</returns>
        </member>
        <member name="T:System.Windows.Forms.DDSPanel">
            <summary>
            Displays and manipulates a DDS image
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.#ctor">
            <summary>
            Displays and manipulates a DDS image
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.DDSLoad(System.IO.Stream,System.Boolean)">
            <summary>
            Load a DDS image from a <see cref="T:System.IO.Stream"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing the DDS image to display,<br/>
            - or -<br/>
            <c>null</c> to clear the image and free resources.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.DDSLoad(System.Drawing.DdsFile)">
            <summary>
            Sets the DDS image for this <see cref="T:System.Windows.Forms.DDSPanel"/> from the given <paramref name="ddsfile"/>.
            <see cref="P:System.Windows.Forms.DDSPanel.SupportsHSV"/> is determined from the <see cref="P:System.Drawing.DdsFile.SupportsHSV"/> value.
            </summary>
            <param name="ddsfile">A <see cref="T:System.Drawing.DdsFile"/> to display in this <see cref="T:System.Windows.Forms.DDSPanel"/>.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.DDSLoad(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Sets the DDS image for this <see cref="T:System.Windows.Forms.DDSPanel"/> from the given <paramref name="image"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="image">A <see cref="T:System.Drawing.Bitmap"/> to display in this <see cref="T:System.Windows.Forms.DDSPanel"/>.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.Import(System.String,System.Boolean)">
            <summary>
            Imports an <see cref="T:System.Drawing.Image"/> from the specified file using embedded color
            management information in that file and uses the file as the DDS image to work on;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="filename">A string that contains the name of the file from which to read the <see cref="T:System.Drawing.Image"/>.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
            <exception cref="T:System.OutOfMemoryException">
            The file does not have a valid image format.<br/>
            -or-<br/>
            GDI+ does not support the pixel format of the file.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
            <exception cref="T:System.ArgumentException">filename is a System.Uri.</exception>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.DDSSave(System.IO.Stream)">
            <summary>
            Saves the current image to a DDS in <paramref name="stream"/>.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.Clear">
            <summary>
            Sets the DDSPanel to an unloaded state, freeing resources.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.GetDdsFile">
            <summary>
            Get a copy of the current DDS image as a <see cref="T:System.Drawing.DdsFile"/>.
            </summary>
            <returns>A new <see cref="T:System.Drawing.DdsFile"/> copy of the current DDS image.</returns>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Nullable{System.UInt32},System.Drawing.Size,System.Boolean)">
            <summary>
            Creates an image of a specified <paramref name="colour"/> and <paramref name="size"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="colour">ARGB colour.  If <c>null</c>, method returns with no action.</param>
            <param name="size">Size of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Nullable{System.UInt32},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a specified <paramref name="colour"/> and given
            <paramref name="width"/> and <paramref name="height"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="colour">ARGB colour.  If <c>null</c>, method returns with no action.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Byte,System.Byte,System.Byte,System.Drawing.Size,System.Boolean)">
            <summary>
            Creates an image of a specified colour (with alpha set to full on) and <paramref name="size"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="red">Amount of red per pixel.</param>
            <param name="green">Amount of green per pixel.</param>
            <param name="blue">Amount of blue per pixel.</param>
            <param name="size">Size of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Byte,System.Byte,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a specified colour (with alpha set to full on) and given
            <paramref name="width"/> and <paramref name="height"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="red">Amount of red per pixel.</param>
            <param name="green">Amount of green per pixel.</param>
            <param name="blue">Amount of blue per pixel.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Byte,System.Byte,System.Byte,System.Byte,System.Drawing.Size,System.Boolean)">
            <summary>
            Creates an image of a specified colour and <paramref name="size"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="red">Amount of red per pixel.</param>
            <param name="green">Amount of green per pixel.</param>
            <param name="blue">Amount of blue per pixel.</param>
            <param name="alpha">Amount of alpha per pixel.</param>
            <param name="size">Size of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateImage(System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an image of a specified colour and given
            <paramref name="width"/> and <paramref name="height"/>;
            if <paramref name="supportHSV"/> is passed and true (default is false), the image will
            support HSV shift operations.
            </summary>
            <param name="red">Amount of red per pixel.</param>
            <param name="green">Amount of green per pixel.</param>
            <param name="blue">Amount of blue per pixel.</param>
            <param name="alpha">Amount of alpha per pixel.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="supportHSV">Optional; when true, HSV operations will be supported on the image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.HSVShift(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Apply a hue, saturation and value shift to the image.
            </summary>
            <param name="h">Hue shift, default 0</param>
            <param name="s">Saturation shift, default 0</param>
            <param name="v">Value shift, default 0</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.SetAlphaFromGreyscale(System.IO.Stream)">
            <summary>
            Set the alpha channel of the current image from the given DDS file stream.
            </summary>
            <param name="image"><see cref="T:System.IO.Stream"/> containing a DDS image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.SetAlphaFromGreyscale(System.Drawing.Image)">
            <summary>
            Set the alpha channel of the current image from the given <paramref name="greyscale"/>.
            </summary>
            <param name="greyscale"><see cref="P:System.Windows.Forms.DDSPanel.Image"/> to use to set alpha channel.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.SetAlphaFromGreyscale(System.Drawing.Bitmap)">
            <summary>
            Set the alpha channel of the current image from the given <paramref name="greyscale"/>.
            </summary>
            <param name="greyscale"><see cref="T:System.Drawing.Bitmap"/> to use to set alpha channel.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.GetGreyscaleFromAlpha">
            <summary>
            Converts the alpha channel of the currently loaded DDS image into a greyscale bitmap.
            </summary>
            <returns>A greyscale bitmap representing the current DDS image alpha channel.</returns>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.LoadMask(System.IO.Stream)">
            <summary>
            Load a mask to use for HSV shifting or masked application of colours.
            Clears any mask currently applied.
            </summary>
            <param name="mask"></param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ClearMask">
            <summary>
            Removes any previously applied masked shifts
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateMask(System.Windows.Forms.DDSPanel.MaskChannel,System.Drawing.Size)">
            <summary>
            Creates a mask with given <paramref name="maskChannels"/> active and of given <paramref name="size"/>.
            </summary>
            <param name="maskChannels">Which channels in the mask should be activated.</param>
            <param name="size">Size of image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.CreateMask(System.Windows.Forms.DDSPanel.MaskChannel,System.Int32,System.Int32)">
            <summary>
            Creates a mask with given <paramref name="maskChannels"/> active and of given <paramref name="width"/> and <paramref name="height"/>.
            </summary>
            <param name="maskChannels">Which channels in the mask should be activated.</param>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyHSVShift(System.IO.Stream,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Boolean)">
            <summary>
            Apply <see cref="M:System.Windows.Forms.DDSPanel.HSVShift(System.Decimal,System.Decimal,System.Decimal)"/> values to the image, based on the
            channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Shift">A shift to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Shift">A shift to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Shift">A shift to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Shift">A shift to apply to the image when the fourth channel of the mask is active.</param>
            <param name="blend">When true, each channel's shift adds; when false, each channel's shift overrides.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyHSVShift(System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Drawing.HSVShift,System.Boolean)">
            <summary>
            Apply <see cref="M:System.Windows.Forms.DDSPanel.HSVShift(System.Decimal,System.Decimal,System.Decimal)"/> values to the image, based on the
            channels in the currently loaded mask.
            </summary>
            <param name="ch1Shift">A shift to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Shift">A shift to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Shift">A shift to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Shift">A shift to apply to the image when the fourth channel of the mask is active.</param>
            <param name="blend">When true, each channel's shift adds; when false, each channel's shift overrides.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyColours(System.IO.Stream,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Set the colour of the image based on the channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Colour">(Nullable) ARGB colour to the image when the first channel of the mask is active.</param>
            <param name="ch2Colour">(Nullable) ARGB colour to the image when the second channel of the mask is active.</param>
            <param name="ch3Colour">(Nullable) ARGB colour to the image when the third channel of the mask is active.</param>
            <param name="ch4Colour">(Nullable) ARGB colour to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyColours(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Set the colour of the image based on the channels in the currently loaded mask.
            </summary>
            <param name="ch1Colour">(Nullable) ARGB colour to the image when the first channel of the mask is active.</param>
            <param name="ch2Colour">(Nullable) ARGB colour to the image when the second channel of the mask is active.</param>
            <param name="ch3Colour">(Nullable) ARGB colour to the image when the third channel of the mask is active.</param>
            <param name="ch4Colour">(Nullable) ARGB colour to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the currently loaded mask.
            </summary>
            <param name="ch1Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.IO.Stream"/> containing the DDS image to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.IO.Stream,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the currently loaded mask.
            </summary>
            <param name="ch1Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.Drawing.Image"/> to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.IO.Stream,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the <paramref name="mask"/>.
            </summary>
            <param name="mask">The <see cref="T:System.IO.Stream"/> containing the DDS image to use as a mask.</param>
            <param name="ch1Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.ApplyImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Apply the supplied images to the areas of the base image defined by the
            channels in the currently loaded mask.
            </summary>
            <param name="ch1Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the first channel of the mask is active.</param>
            <param name="ch2Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the second channel of the mask is active.</param>
            <param name="ch3Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the third channel of the mask is active.</param>
            <param name="ch4Image">The <see cref="T:System.Drawing.Bitmap"/> to apply to the image when the fourth channel of the mask is active.</param>
        </member>
        <member name="F:System.Windows.Forms.DDSPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:System.Windows.Forms.DDSPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Fit">
            <summary>
            When true, the image will resize to the control bounds.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.MaxSize">
            <summary>
            When non-zero, indicates the maximum width and height to constrain the image size.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Channel1">
            <summary>
            The "Red" checkbox Checked state.
            </summary>
            <remarks>The DDS Image is retrieved using the Channel1 to 4 and InvertCh4 values.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Channel2">
            <summary>
            The "Green" checkbox Checked state.
            </summary>
            <remarks>The DDS Image is retrieved using the Channel1 to 4 and InvertCh4 values.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Channel3">
            <summary>
            The "Blue" checkbox Checked state.
            </summary>
            <remarks>The DDS Image is retrieved using the Channel1 to 4 and InvertCh4 values.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Channel4">
            <summary>
            The "Alpha" checkbox Checked state.
            </summary>
            <remarks>The DDS Image is retrieved using the Channel1 to 4 and InvertCh4 values.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.InvertCh4">
            <summary>
            The "Invert" checkbox Checked state.
            </summary>
            <remarks>The DDS Image is retrieved using the Channel1 to 4 and InvertCh4 values.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.ShowChannelSelector">
            <summary>
            When true, the Channel Selection checkboxes will be displayed above the image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.SupportsHSV">
            <summary>
            When true, enables use of HSV-related methods.
            </summary>
            <remarks>Requires an increase in stored data whilst true.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.HueShift">
            <summary>
            Hue shift to be applied to the image.
            </summary>
            <remarks>Only effective when HSV processing is enabled.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.SaturationShift">
            <summary>
            Saturation shift to be applied to the image.
            </summary>
            <remarks>Only effective when HSV processing is enabled.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.ValueShift">
            <summary>
            Value shift to be applied to the image.
            </summary>
            <remarks>Only effective when HSV processing is enabled.</remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.Image">
            <summary>
            Returns the image that is displayed by the DDSPanel.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.ImageSize">
            <summary>
            The size of the current image (or <see cref="F:System.Drawing.Size.Empty"/> if not loaded).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.AlphaDepth">
            <summary>
            The number of alpha channel bits per pixel in the encoded DDS image or the DXT compression mode.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.UseDXT">
            <summary>
            If true, use DXT-type image compression for storage.  The mode will depend on the <see cref="P:System.Windows.Forms.DDSPanel.AlphaDepth"/>.
            </summary>
            <remarks>
            Setting to false (from true) will default to A8B8G8R8 format.
            </remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.UseLuminance">
            <summary>
            If true, treat the image as a luminance (plus alpha) map for storage.
            </summary>
            <remarks>
            Currently only A8L8, 16bit coding is supported.
            Setting to false (from true) will default to A8B8G8R8 (non-DXT) format.
            Setting to true does not turn the image into a greyscale.
            This only happens on saving the image (and will not affect the displayed values until they are read back in).
            </remarks>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.MaskLoaded">
            <summary>
            Indicates that a Mask is currently loaded.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DDSPanel.MaskSize">
            <summary>
            The size of the current mask (or <see cref="F:System.Drawing.Size.Empty"/> if no mask loaded).
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.FitChanged">
            <summary>
            Raised to indicate Fit value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.MaxSizeChanged">
            <summary>
            Raised to indicate MaxSize value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.Channel1Changed">
            <summary>
            Raised to indicate Channel1 value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.Channel2Changed">
            <summary>
            Raised to indicate Channel2 value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.Channel3Changed">
            <summary>
            Raised to indicate Channel3 value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.Channel4Changed">
            <summary>
            Raised to indicate Channel4 value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.InvertCh4Changed">
            <summary>
            Raised to indicate InvertCh4 value changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.DDSPanel.ShowChannelSelectorChanged">
            <summary>
            Raised to indicate ShowChannelSelector value changed.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DDSPanel.MaskChannel">
            <summary>
            Used to indicate which channels in a mask should be activated when creating a new mask.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DDSPanel.MaskChannel.C1">
            <summary>
            Activates channel 1 ("Red")
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DDSPanel.MaskChannel.C2">
            <summary>
            Activates channel 2 ("Green")
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DDSPanel.MaskChannel.C3">
            <summary>
            Activates channel 3 ("Blue")
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DDSPanel.MaskChannel.C4">
            <summary>
            Activates channel 4 ("Alpha")
            </summary>
        </member>
        <member name="M:System.Drawing.DdsSquish.CompressImage(System.Byte[],System.Int32,System.Int32,System.Drawing.DdsSquish.SquishFlags,System.Single[])">
            <summary>
            Compresses an image in memory.
            </summary>
            <param name="pixelInput">The pixels of the source.</param>
            <param name="width">The width of the source image.</param>
            <param name="height">The height of the source image.</param>
            <param name="flags">Compression flags.</param>
            <param name="metric">An optional perceptual metric.</param>
            <returns>Byte array containing the compressed output.</returns>
            <remarks>
            <para>
            The source pixels should be presented as a contiguous array of width*height
            rgba values, with each component as 1 byte each. In memory this should be:
            <c>{ r1, g1, b1, a1, .... , rn, gn, bn, an }</c> for n = width*height
            </para>
            <para>
            The <paramref name="flags"/> parameter should specify either <c>kDxt1</c>, <c>kDxt3</c> or <c>kDxt5</c> compression, 
            however, DXT1 will be used by default if none is specified. When using DXT1 
            compression, 8 bytes of storage are required for each compressed DXT block. 
            DXT3 and DXT5 compression require 16 bytes of storage per block.
            </para>
            <para>
            The <paramref name="flags"/> parameter can also specify a preferred colour compressor to use 
            when fitting the RGB components of the data. Possible colour compressors 
            are: <c>kColourClusterFit</c> (the default), <c>kColourRangeFit</c> (very fast, low 
            quality) or <c>kColourIterativeClusterFit</c> (slowest, best quality).
            </para>
            <para>
            When using <c>kColourClusterFit</c> or <c>kColourIterativeClusterFit</c>, an additional 
            flag can be specified to weight the importance of each pixel by its alpha 
            value. For images that are rendered using alpha blending, this can 
            significantly increase the perceived quality.</para>
            <para>
            The <paramref name="metric"/> parameter can be used to weight the relative importance of each
            colour channel, or pass NULL to use the default uniform weight of 
            <c>{ 1.0f, 1.0f, 1.0f }</c>. This replaces the previous flag-based control that 
            allowed either uniform or "perceptual" weights with the fixed values
            <c>{ 0.2126f, 0.7152f, 0.0722f }</c>. If non-NULL, the metric should point to a 
            contiguous array of 3 floats.
            </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.DdsSquish.DecompressImage(System.Byte[],System.Int32,System.Int32,System.Drawing.DdsSquish.SquishFlags)">
            <summary>
            Decompresses an image in memory.
            </summary>
            <param name="blocks">The compressed DXT blocks.</param>
            <param name="width">The width of the source image.</param>
            <param name="height">The height of the source image.</param>
            <param name="flags">Compression flags.</param>
            <returns>Byte array containing the decompressed pixels.</returns>
            <remarks>The decompressed pixels will be written as a contiguous array of width*height
            16 rgba values, with each component as 1 byte each. In memory this is:
            <code>{ r1, g1, b1, a1, .... , rn, gn, bn, an } for n = width*height</code>
            The <paramref name="flags"/> parameter should specify either <c>kDxt1</c>, <c>kDxt3</c> or <c>kDxt5</c> compression, 
            however, DXT1 will be used by default if none is specified. All other flags are ignored.</remarks>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kDxt1">
            <summary>
            Use DXT1 compression.
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kDxt3">
            <summary>
            Use DXT3 compression.
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kDxt5">
            <summary>
            Use DXT5 compression.
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kColourClusterFit">
            <summary>
            Use a slow but high quality colour compressor (the default).
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kColourRangeFit">
            <summary>
            Use a fast but low quality colour compressor.
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kColourMetricPerceptual">
            <summary>
            Use a perceptual metric for colour error (the default).
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kColourMetricUniform">
            <summary>
            Use a uniform metric for colour error.
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kWeightColourByAlpha">
            <summary>
            Weight the colour by alpha during cluster fit (disabled by default).
            </summary>
        </member>
        <member name="F:System.Drawing.DdsSquish.SquishFlags.kColourIterativeClusterFit">
            <summary>
            Use a very slow but very high quality colour compressor.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Drawing.ColorHSVA">
            <summary>
            Implement ColorHSVA class and conversion to ColorRGBA
            </summary>
            <remarks>See <a href="http://www.academictutorials.com/graphics/graphics-the-hsl-color-model.asp">this paper</a>
            for where this code originates.
            Note that I've changed disagreements between scaling by 255 or 256 to always use 255.  This means
            floats range from 0.0f to 1.0f and bytes from 0 to 255.  I hope.</remarks>
        </member>
        <member name="F:System.Drawing.ColorHSVA.h">
            <summary>
            h for hue, s for saturation, v for value, a for alpha
            </summary>
        </member>
        <member name="F:System.Drawing.ColorHSVA.s">
            <summary>
            h for hue, s for saturation, v for value, a for alpha
            </summary>
        </member>
        <member name="F:System.Drawing.ColorHSVA.v">
            <summary>
            h for hue, s for saturation, v for value, a for alpha
            </summary>
        </member>
        <member name="F:System.Drawing.ColorHSVA.a">
            <summary>
            h for hue, s for saturation, v for value, a for alpha
            </summary>
        </member>
        <member name="M:System.Drawing.ColorHSVA.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Create a new <see cref="T:System.Drawing.ColorHSVA"/> from the given values.
            </summary>
            <param name="h">Hue.</param>
            <param name="s">Saturation.</param>
            <param name="v">Value.</param>
            <param name="a">Alpha.</param>
        </member>
        <member name="M:System.Drawing.ColorHSVA.#ctor(System.Drawing.ColorHSVA)">
            <summary>
            Create a new <see cref="T:System.Drawing.ColorHSVA"/> from an existing <see cref="T:System.Drawing.ColorHSVA"/> value.
            </summary>
            <param name="hsva">An existing <see cref="T:System.Drawing.ColorHSVA"/> value.</param>
        </member>
        <member name="M:System.Drawing.ColorHSVA.ToARGB">
            <summary>
            Convert from ColorHSVA to UInt32 ARGB format.
            </summary>
            <returns>The equivalent UInt32 ARGB format value.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.op_Explicit(System.UInt32)~System.Drawing.ColorHSVA">
            <summary>
            Cast from UInt32 ARGB format to ColorHSVA.
            </summary>
            <param name="argb"></param>
            <returns>The equivalent ColorHSVA value.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.Equals(System.Object)">
            <summary>
            Determine if <paramref name="obj"/> is a <see cref="T:System.Drawing.ColorHSVA"/> equal
            to the current value.
            </summary>
            <param name="obj">Value to test for equality.</param>
            <returns>True if <paramref name="obj"/> is a <see cref="T:System.Drawing.ColorHSVA"/> equal
            to the current value; otherwise false.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>The hashcode for this instance.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.op_Equality(System.Drawing.ColorHSVA,System.Drawing.ColorHSVA)">
            <summary>
            Determine whether two <see cref="T:ColorHSVA"/> objects have the same value.
            </summary>
            <param name="val1">First object.</param>
            <param name="val2">Second object.</param>
            <returns>True if the Equals method on <paramref name="val1"/> returns true when passed <paramref name="val2"/>.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.op_Inequality(System.Drawing.ColorHSVA,System.Drawing.ColorHSVA)">
            <summary>
            Determine whether two <see cref="T:ColorHSVA"/> objects do not have the same value.
            </summary>
            <param name="val1">First object.</param>
            <param name="val2">Second object.</param>
            <returns>True if the Equals method on <paramref name="val1"/> returns false when passed <paramref name="val2"/>.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.HSVShift(System.Drawing.HSVShift)">
            <summary>
            Return the current <see cref="T:System.Drawing.ColorHSVA"/> adjusted by a given <see cref="M:System.Drawing.ColorHSVA.HSVShift(System.Drawing.HSVShift)"/> value.
            </summary>
            <param name="hsvShift">The <see cref="M:System.Drawing.ColorHSVA.HSVShift(System.Drawing.HSVShift)"/> value by which to adjust this <see cref="T:System.Drawing.ColorHSVA"/>.</param>
            <returns>The current <see cref="T:System.Drawing.ColorHSVA"/> adjusted by a given <see cref="M:System.Drawing.ColorHSVA.HSVShift(System.Drawing.HSVShift)"/> value.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.ToArrayColorHSVA(System.UInt32[])">
            <summary>
            Creates the HSVA data values corresponding to an array of UInt32 ARGB values.
            </summary>
            <param name="argbData">An array of UInt32 ARGB values.</param>
            <returns>HSVA data values corresponding to <paramref name="argbData"/>.</returns>
        </member>
        <member name="M:System.Drawing.ColorHSVA.ToArrayARGB(System.Drawing.ColorHSVA[],System.Drawing.HSVShift)">
            <summary>
            Creates a Bitmap image corresponding to an HSVA image.
            </summary>
            <param name="hsvaData">An HSVA image.</param>
            <param name="hsvShift">An optional <see cref="M:System.Drawing.ColorHSVA.HSVShift(System.Drawing.HSVShift)"/> to apply.</param>
            <returns>A Bitmap image corresponding to <paramref name="hsvaData"/>.</returns>
        </member>
        <member name="T:System.Drawing.HSVShift">
            <summary>
            Describes a hue, saturation and value shift to be applied to an image
            </summary>
        </member>
        <member name="F:System.Drawing.HSVShift.h">
            <summary>
            Hue, Saturation and Value shift amounts.
            </summary>
        </member>
        <member name="F:System.Drawing.HSVShift.s">
            <summary>
            Hue, Saturation and Value shift amounts.
            </summary>
        </member>
        <member name="F:System.Drawing.HSVShift.v">
            <summary>
            Hue, Saturation and Value shift amounts.
            </summary>
        </member>
        <member name="M:System.Drawing.HSVShift.Equals(System.Object)">
            <summary>
            Returns true if <paramref name="obj"/> is a <see cref="T:System.Drawing.HSVShift"/> with the same value as this instance.
            </summary>
            <param name="obj">An object to compare.</param>
            <returns>True if <paramref name="obj"/> is a <see cref="T:System.Drawing.HSVShift"/> with the same value as this instance; otherwise false.</returns>
        </member>
        <member name="M:System.Drawing.HSVShift.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>The hashcode for this instance.</returns>
        </member>
        <member name="M:System.Drawing.HSVShift.op_Equality(System.Drawing.HSVShift,System.Drawing.HSVShift)">
            <summary>
            Determine whether two <see cref="T:HSVShift"/> objects have the same value.
            </summary>
            <param name="val1">First object.</param>
            <param name="val2">Second object.</param>
            <returns>True if the Equals method on <paramref name="val1"/> returns true when passed <paramref name="val2"/>.</returns>
        </member>
        <member name="M:System.Drawing.HSVShift.op_Inequality(System.Drawing.HSVShift,System.Drawing.HSVShift)">
            <summary>
            Determine whether two <see cref="T:HSVShift"/> objects do not have the same value.
            </summary>
            <param name="val1">First object.</param>
            <param name="val2">Second object.</param>
            <returns>True if the Equals method on <paramref name="val1"/> returns false when passed <paramref name="val2"/>.</returns>
        </member>
        <member name="P:System.Drawing.HSVShift.IsEmpty">
            <summary>
            True if this HSVShift is non-zero.
            </summary>
        </member>
        <member name="P:System.Drawing.HSVShift.Empty">
            <summary>
            An empty HSVShift
            </summary>
        </member>
    </members>
</doc>
